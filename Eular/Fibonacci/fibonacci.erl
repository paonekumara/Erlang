% Each new term in the Fibonacci sequence is generated by adding the previous two terms.
% By starting with 1 and 2, the first 10 terms will be: 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
% By considering the terms in the Fibonacci sequence whose values do not exceed four million,
% find the sum of the even-valued terms.

-module(fibonacci).
-export([main/1]).

main(Until_n) -> 
    Series = fibonacci(Until_n),
    TotalSum = sum(Series),
    io:format("Series::~w Total sum is:~w ~n", [Series, TotalSum]).

%----------------------------------------   Summation of a Numbers in list   ----------------------------------------%
sum(L) -> sum(L, 0).

sum([H|T], Acc) when (H rem 2) =:= 0 -> sum(T, H + Acc);
sum([_|T], Acc) -> sum(T, Acc);
sum([], Acc) -> Acc.
%----------------------------------------   Fibonacci series till n   ----------------------------------------%
fibonacci(Until_n) -> fibonacci(Until_n, 0, 0, 0).

fibonacci(N, N, _, _) ->     [];
fibonacci(N, 0, _, _) ->     [0|fibonacci(N, 1, 0, 1)];
fibonacci(N, 1, _, _) ->     [1|fibonacci(N, 2, 1, 1)];
fibonacci(N, _, X, Y) when N > (Y + X) -> [Y|fibonacci(N, Y + X, Y, Y + X)];
fibonacci(N, _, X, Y) -> [Y|fibonacci(N, N, Y, Y + X)].
